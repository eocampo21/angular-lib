import { Component, Input } from '@angular/core';
import { map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../tvmaze.service";
import * as i2 from "@angular/common";
export class PosterComponent {
    constructor(tvmaze) {
        this.tvmaze = tvmaze;
        this.showId = null;
        this.left = false;
    }
    ngOnInit() {
        console.log(this.showId);
        this.posterUrl$ = this.tvmaze
            .getShow(this.showId || 55)
            .pipe(map(show => show));
    }
}
PosterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.2", ngImport: i0, type: PosterComponent, deps: [{ token: i1.TvmazeService }], target: i0.ɵɵFactoryTarget.Component });
PosterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.2", type: PosterComponent, selector: "tm-poster", inputs: { showId: "showId", left: "left" }, ngImport: i0, template: "<div class=\"container poster\">\n  <ng-container *ngIf=\"left\">\n    <img class=\"poster__img left\" *ngIf=\"posterUrl$ | async as poster\" [src]=\"poster.image.medium\" />\n  </ng-container>\n \n  <ul class=\"poster__description\">\n    <li class=\"poster__name\" *ngIf=\"posterUrl$ | async as poster\"><p>Movies Name: {{poster.name}}</p></li>\n    <li class=\"poster__rating\" *ngIf=\"posterUrl$ | async as poster\" ><p>Rating: {{poster.rating.average}}</p></li>\n    <li class=\"poster__summary\" *ngIf=\"posterUrl$ | async as poster\" [innerHTML]=\"poster.summary\" ></li>\n  </ul>\n  <ng-container *ngIf=\"!left\">\n    <img class=\"poster__img right\" *ngIf=\"posterUrl$ | async as poster\" [src]=\"poster.image.medium\" />\n  </ng-container>\n</div>", styles: [".poster{display:flex;margin:2vw;overflow:hidden}.poster__img.left{border-bottom-left-radius:30px;border-top-left-radius:30px}.poster__img.right{border-bottom-right-radius:30px;border-top-right-radius:30px}.poster__description{display:flex;flex-direction:column;justify-content:center;padding-inline-end:40px;border:1px solid rgba(63,81,181,.1098039216);margin-block-start:0;margin-block-end:0}ul li{list-style-type:none}\n"], dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.2", ngImport: i0, type: PosterComponent, decorators: [{
            type: Component,
            args: [{ selector: 'tm-poster', template: "<div class=\"container poster\">\n  <ng-container *ngIf=\"left\">\n    <img class=\"poster__img left\" *ngIf=\"posterUrl$ | async as poster\" [src]=\"poster.image.medium\" />\n  </ng-container>\n \n  <ul class=\"poster__description\">\n    <li class=\"poster__name\" *ngIf=\"posterUrl$ | async as poster\"><p>Movies Name: {{poster.name}}</p></li>\n    <li class=\"poster__rating\" *ngIf=\"posterUrl$ | async as poster\" ><p>Rating: {{poster.rating.average}}</p></li>\n    <li class=\"poster__summary\" *ngIf=\"posterUrl$ | async as poster\" [innerHTML]=\"poster.summary\" ></li>\n  </ul>\n  <ng-container *ngIf=\"!left\">\n    <img class=\"poster__img right\" *ngIf=\"posterUrl$ | async as poster\" [src]=\"poster.image.medium\" />\n  </ng-container>\n</div>", styles: [".poster{display:flex;margin:2vw;overflow:hidden}.poster__img.left{border-bottom-left-radius:30px;border-top-left-radius:30px}.poster__img.right{border-bottom-right-radius:30px;border-top-right-radius:30px}.poster__description{display:flex;flex-direction:column;justify-content:center;padding-inline-end:40px;border:1px solid rgba(63,81,181,.1098039216);margin-block-start:0;margin-block-end:0}ul li{list-style-type:none}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.TvmazeService }]; }, propDecorators: { showId: [{
                type: Input
            }], left: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9zdGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3R2bWF6ZS9zcmMvbGliL3Bvc3Rlci9wb3N0ZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdHZtYXplL3NyYy9saWIvcG9zdGVyL3Bvc3Rlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6RCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7QUFTckMsTUFBTSxPQUFRLGVBQWU7SUFLM0IsWUFBb0IsTUFBcUI7UUFBckIsV0FBTSxHQUFOLE1BQU0sQ0FBZTtRQUpoQyxXQUFNLEdBQWtCLElBQUksQ0FBQztRQUM3QixTQUFJLEdBQWEsS0FBSyxDQUFDO0lBSWhDLENBQUM7SUFFRCxRQUFRO1FBQ04sT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDekIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsTUFBTTthQUMxQixPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sSUFBSSxFQUFFLENBQUM7YUFDMUIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDN0IsQ0FBQzs7NEdBYlcsZUFBZTtnR0FBZixlQUFlLDZGQ1g3Qix3dkJBYU07MkZERlEsZUFBZTtrQkFMNUIsU0FBUzsrQkFDRSxXQUFXO29HQUtaLE1BQU07c0JBQWQsS0FBSztnQkFDRyxJQUFJO3NCQUFaLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IFNob3cgfSBmcm9tICcuLi90dm1hemUubW9kZWxzJztcbmltcG9ydCB7IFR2bWF6ZVNlcnZpY2UgfSBmcm9tICcuLi90dm1hemUuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RtLXBvc3RlcicsXG4gIHRlbXBsYXRlVXJsOiBgLi9wb3N0ZXIuY29tcG9uZW50Lmh0bWxgLFxuICBzdHlsZVVybHM6IFtgLi9wb3N0ZXIuY29tcG9uZW50LnNhc3NgXVxufSlcbmV4cG9ydCAgY2xhc3MgUG9zdGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgc2hvd0lkOiBudW1iZXIgfCBudWxsID0gbnVsbDtcbiAgQElucHV0KCkgbGVmdD86IGJvb2xlYW4gPSBmYWxzZTtcbiAgcG9zdGVyVXJsJDogT2JzZXJ2YWJsZTxTaG93PiB8IHVuZGVmaW5lZDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHR2bWF6ZTogVHZtYXplU2VydmljZSkge1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgY29uc29sZS5sb2codGhpcy5zaG93SWQpO1xuICAgIHRoaXMucG9zdGVyVXJsJCA9IHRoaXMudHZtYXplXG4gICAgICAuZ2V0U2hvdyh0aGlzLnNob3dJZCB8fCA1NSlcbiAgICAgIC5waXBlKG1hcChzaG93ID0+IHNob3cpKTtcbiAgfVxufSIsIjxkaXYgY2xhc3M9XCJjb250YWluZXIgcG9zdGVyXCI+XG4gIDxuZy1jb250YWluZXIgKm5nSWY9XCJsZWZ0XCI+XG4gICAgPGltZyBjbGFzcz1cInBvc3Rlcl9faW1nIGxlZnRcIiAqbmdJZj1cInBvc3RlclVybCQgfCBhc3luYyBhcyBwb3N0ZXJcIiBbc3JjXT1cInBvc3Rlci5pbWFnZS5tZWRpdW1cIiAvPlxuICA8L25nLWNvbnRhaW5lcj5cbiBcbiAgPHVsIGNsYXNzPVwicG9zdGVyX19kZXNjcmlwdGlvblwiPlxuICAgIDxsaSBjbGFzcz1cInBvc3Rlcl9fbmFtZVwiICpuZ0lmPVwicG9zdGVyVXJsJCB8IGFzeW5jIGFzIHBvc3RlclwiPjxwPk1vdmllcyBOYW1lOiB7e3Bvc3Rlci5uYW1lfX08L3A+PC9saT5cbiAgICA8bGkgY2xhc3M9XCJwb3N0ZXJfX3JhdGluZ1wiICpuZ0lmPVwicG9zdGVyVXJsJCB8IGFzeW5jIGFzIHBvc3RlclwiID48cD5SYXRpbmc6IHt7cG9zdGVyLnJhdGluZy5hdmVyYWdlfX08L3A+PC9saT5cbiAgICA8bGkgY2xhc3M9XCJwb3N0ZXJfX3N1bW1hcnlcIiAqbmdJZj1cInBvc3RlclVybCQgfCBhc3luYyBhcyBwb3N0ZXJcIiBbaW5uZXJIVE1MXT1cInBvc3Rlci5zdW1tYXJ5XCIgPjwvbGk+XG4gIDwvdWw+XG4gIDxuZy1jb250YWluZXIgKm5nSWY9XCIhbGVmdFwiPlxuICAgIDxpbWcgY2xhc3M9XCJwb3N0ZXJfX2ltZyByaWdodFwiICpuZ0lmPVwicG9zdGVyVXJsJCB8IGFzeW5jIGFzIHBvc3RlclwiIFtzcmNdPVwicG9zdGVyLmltYWdlLm1lZGl1bVwiIC8+XG4gIDwvbmctY29udGFpbmVyPlxuPC9kaXY+Il19