{"version":3,"file":"tvmaze.mjs","sources":["../../../projects/tvmaze/src/lib/tvmaze.component.ts","../../../projects/tvmaze/src/lib/tvmaze.component.html","../../../projects/tvmaze/src/lib/tvmaze.service.ts","../../../projects/tvmaze/src/lib/poster/poster.component.ts","../../../projects/tvmaze/src/lib/poster/poster.component.html","../../../projects/tvmaze/src/lib/container/container.component.ts","../../../projects/tvmaze/src/lib/container/container.component.html","../../../projects/tvmaze/src/lib/poster-detail/poster-detail.component.ts","../../../projects/tvmaze/src/lib/poster-detail/poster-detail.component.html","../../../projects/tvmaze/src/lib/tvmaze.module.ts","../../../projects/tvmaze/src/public-api.ts","../../../projects/tvmaze/src/tvmaze.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tm-tvmaze',\n  templateUrl: `tvmaze.component.html`,\n  styleUrls: [`tvmaze.component.sass`],\n  \n})\nexport class TvmazeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Show } from './tvmaze.models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TvmazeService {\n  private readonly apiRoot = 'https://api.tvmaze.com';\n\n  constructor(private http: HttpClient) {}\n\n  getShow(id: number): Observable<Show> {\n    const url = `${this.apiRoot}/shows/${id}`;\n    return this.http.get<Show>(url);\n  }\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Show } from '../tvmaze.models';\nimport { TvmazeService } from '../tvmaze.service';\n\n@Component({\n  selector: 'tm-poster',\n  templateUrl: `./poster.component.html`,\n  styleUrls: [`./poster.component.sass`]\n})\nexport  class PosterComponent implements OnInit {\n  @Input() showId: number | null = null;\n  @Input() left?: boolean = false;\n  posterUrl$: Observable<Show> | undefined;\n\n  constructor(private tvmaze: TvmazeService) {\n  }\n\n  ngOnInit() {\n    console.log(this.showId);\n    this.posterUrl$ = this.tvmaze\n      .getShow(this.showId || 55)\n      .pipe(map(show => show));\n  }\n}","<div class=\"poster my-3\">\n    <img class=\"poster__img\" *ngIf=\"posterUrl$ | async as poster\" [src]=\"poster.image.medium\" />\n    <p class=\"poster__rating mt-3\" *ngIf=\"posterUrl$ | async as poster\" >Rating: {{poster.rating.average}}</p>\n</div>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tm-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.sass']\n})\nexport class ContainerComponent implements OnInit {\n  @Input() title?: string ;\n  @Input() subtitle?: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container p-3\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h1>{{title}}</h1>\n            <h3>{{subtitle}}</h3>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12 d-flex justify-content-around\">\n            <ng-content></ng-content>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tm-poster-detail',\n  templateUrl: './poster-detail.component.html',\n  styleUrls: ['./poster-detail.component.css']\n})\nexport class PosterDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>poster-detail works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport  {PosterComponent}  from './poster/poster.component';\nimport { TvmazeComponent } from './tvmaze.component';\nimport { ContainerComponent } from './container/container.component';\nimport { PosterDetailComponent } from './poster-detail/poster-detail.component';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule],\n  declarations: [PosterComponent, TvmazeComponent, ContainerComponent, PosterDetailComponent],\n  exports: [PosterComponent, TvmazeComponent, ContainerComponent]\n})\nexport class TvmazeModule {}","/*\n * Public API Surface of tvmaze\n */\n\nexport * from './lib/tvmaze.component';\nexport * from './lib/poster/poster.component';\nexport * from './lib/container/container.component';\nexport * from './lib/tvmaze.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.TvmazeService"],"mappings":"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"}